## 링크 정리
# 링크의 상대 주소(Relative URL)
현재 폴더는 점 한 개(./)로 표시하고, 상위 폴더는 점 두 개(../)로 표시합니다. 최상위 폴더는 경로 맨 앞에 / 로 시작하면 됩니다. 특별히 index.html 파일은 이름을 생략하고 폴더 이름만 쓸 수 있습니다.

링크의 상대 주소 예시 이미지

myeong-ryang.html에서 최상위 폴더에 있는 index.html로 연결하는 링크 예시

<a href="../../index.html">홈페이지로 가기</a>
<a href="../../">홈페이지로 가기</a>
<a href="/index.html">홈페이지로 가기</a>
<a href="/">홈페이지로 가기</a>

# URI 프래그먼트(URI Fragment)
페이지의 특정 부분을 가리키는 주소입니다. 원하는 곳에 id 속성을 지정해 두고, 링크 주소로 사용할 때는 맨 끝에 #으로 시작하는 #아이디-이름 을 쓰면 됩니다.

팀 버너스리는 "인터넷 사용 자체가 인권"<a href="#note-1">[1]</a>이라고 말했다.

...

<p id="note-1">[1] 서울디지털포럼 2013 기조연설</p>

# target 속성
새 창(새 탭)으로 열거나 현재 창 또는 내가 원하는 창으로 열 수 있습니다.

<a href="https://movie.naver.com" target="_blank"><!-- 새 창으로 열기 -->
  네이버 영화 
</a>
<a href="https://movie.naver.com" target="_self"><!-- 현재 창 -->
  네이버 영화
</a>
<a href="https://movie.naver.com" target="movie"><!-- 내가 원하는 창 -->
  네이버 영화
</a>
<a href="https://movie.daum.net" target="movie"><!-- 내가 원하는 창 -->
  다음 영화
</a>
<a href="https://imbd.com" target="movie"><!-- 내가 원하는 창 -->
  imbd
</a>

## 자주 쓰는 텍스트 태그
# 이제 본격적으로 HTML의 다양한 태그들을 배워 볼 건데요. 가장 먼저 텍스트 문서를 작성하는데 필요한 태그를 살펴보겠습니다.

마크업의 의미를 이해하자
어떤 태그가 있는지 아는 것도 중요하지만, 앞에서 설명드렸던 것처럼 마크업의 의미를 잘 이해하고 넘어가는 게 더 중요합니다. 예를 들어서 제목 태그인 <h1>은 웹 브라우저에서 큰 글자로 두껍게 보입니다. 하지만 이런 겉모습이 제목 태그의 본질은 아닌데요. <h1> 태그의 본질은 현재 페이지에서 가장 큰 제목이라는 의미입니다. 이런 식으로 태그가 가지고 있는 의미에 대해 이해하고 넘어가시는 걸 추천해 드릴게요.

# 제목 태그 <h1> ~ <h6>
문서의 제목을 나타내는 태그입니다. 조금 과장해서 예를 들어보자면 아래처럼 한국 영화에 대한 문서를 만들 수 있는데요.

<h1>한국 영화</h1>

<h2>한국 영화의 역사</h2>
<h3>1950년대: 침체기</h3>
<h3>1960년대: 황금기</h3>
<h3>1970년대: 쇠퇴기</h3>
<h3>1980년대: 암흑기</h3>
<h3>1990년대: 전환점</h3>
<h3>2000년대: 르네상스</h3>
<h3>2010년대: 최전성기</h3>
<h3>2020년대: 대격변</h3>

<h2>유명한 한국 감독</h2>
<h3>박찬욱</h3>
<h3>봉준호</h3>
<h3>임권택</h3>
<h3>김기덕</h3>
<h3>김기영</h3>
<h3>최동훈</h3>
위 HTML 코드에 담겨 있는 정보의 구조를 그려보면 아래처럼 될 겁니다. 이런 식으로 문서에서 제목을 나누는 태그입니다.

- 한국 영화
  - 한국 영화의 역사
    - 1950년대: 침체기
    - 1960년대: 황금기
    - 1970년대: 쇠퇴기
    - 1980년대: 암흑기
    - 1990년대: 전환점
    - 2000년대: 르네상스
    - 2010년대: 최전성기
    - 2020년대: 대격변
  - 유명한 한국 감독
    - 박찬욱
    - 봉준호
    - 임권택
    - 김기덕
    - 김기영
    - 최동훈
본문 <p>
본문을 작성할 때 쓰는 태그입니다.

<h1>한국 영화</h1>

<h2>한국 영화의 역사</h2>
<h3>1950년대: 침체기</h3>
<p>
    1950년대에는 한국전쟁이 일어나면서 영화계는 침체를 맞게 됩니다.
    하지만 1950년대 중반을 지나서 그 사이 발전된 기술에 힘입어
    점점 많은 영화가 나오기 시작하더니 1950년대 후반에 들어서는 1년에 100편 가까이 제작되었습니다.
</p>
<h3>1960년대: 황금기</h3>
...

위 HTML 코드에 담겨 있는 정보의 구조를 그려보면 아래처럼 되겠죠?

- 한국 영화
  - 한국 영화의 역사
    - 1950년대: 침체기
      - 1950년대에는 한국전쟁이 일어나면서 영화계는 침체를 맞게 됩니다.
          하지만 1950년대 중반을 지나서 그 사이 발전된 기술에 힘입어 ...
    - 1960년대: 황금기
    ...

# 줄바꿈 <br>
제목이나 본문 같은 데서 줄을 바꿀 때 사용하는 태그입니다.  줄 바꿈이 없으면 보통 아래처럼 한 문단으로 이어서 보여 주는데요.

html
<p>
    1950년대에는 한국전쟁이 일어나면서 영화계는 침체를 맞게 됩니다.
    하지만 1950년대 중반을 지나서 그 사이 발전된 기술에 힘입어
    점점 많은 영화가 나오기 시작하더니 1950년대 후반에 들어서는 1년에 100편 가까이 제작되었습니다.
</p>

결과 확인
만약에 여기에 강제로 줄 바꿈을 하고 싶으면 <br> 태그를 씁니다.

html
<p>
    1950년대에는 한국전쟁이 일어나면서 영화계는 침체를 맞게 됩니다.<br>
    하지만 1950년대 중반을 지나서 그 사이 발전된 기술에 힘입어
    점점 많은 영화가 나오기 시작하더니 1950년대 후반에 들어서는 1년에 100편 가까이 제작되었습니다.
</p>

결과 확인

# 중요 <strong>
중요한 내용을 강조해서 표시할 때 사용하는 태그입니다.

html
<p>
    코드잇 영화관에서는 영화 상영 전 광고없이 정시에 상영을 시작합니다.
    정시에 입장하여 관람중인 관객들을 위해
    <strong>상영 시작 10분 후에는 입장이 제한됨을 알려드립니다.</strong>
</p>

결과 확인
크롬 브라우저에서는 기본적으로 <strong> 태그를 두꺼운 글씨로 보여줍니다. 여기서 주의할 점은 두꺼운 글씨를 쓰고 싶다고 이 태그를 쓰면 안 됩니다! 꾸미기 위해 두꺼운 글씨를 넣으려면 CSS로 두꺼운 글씨를 만들고, 의미상 강조의 의미가 있는 경우에만 <strong>을 사용하세요.

# 강조 <em>
글은 말하는 것과 달리 억양을 다르게 표현하기 힘들다는 단점이 있습니다. 그래서 전통적으로 책이나 잡지 같은데서는 글자를 조금 다른 모양으로 보여주거나 하는 식으로 억양을 표현하는데요.  일반적인 문장이지만 조금 다르게 읽어서 강조를 하곤 하죠. HTML에서도 <em> 이라는 태그를 사용해서 이런 내용의 강조를 나타낼 수 있습니다.

htmlcss
<p>
    제 이름은 윤 <em>여정</em>입니다. 요정도 아니고 유정도 아니고 여정이죠.
</p>

결과 확인
참고로 크롬 브라우저에서는 <em> 태그의 기본 디자인을 기울어진 글씨로 보여주는데요. 이건 영어권에서 강조할 때 주로 사용하는 표시입니다.

# 취소 <s>
어떤 내용을 적었다가 지우지 않고, 지웠다는 표시만 남기고 싶을 때가 있죠? 이렇게 어떤 내용이 취소, 제거되었다는 의미를 표현할 때 <s> 태그를 씁니다.

html
<p>
    <s>단체 관람을 원하시는 분들은 코드잇 홈페이지에서 예약해주세요.</s>
    <br>
    현재 코로나 방역으로 인해 극장 입장을 20인으로 제한하고 있어 단체 관람이 어렵습니다.
</p>

결과 확인
인용 <blockquote>, <q>
다른 곳에서 가져온 내용을 긴 글로 인용할 때는 아래처럼 쓰고요.

html
<blockquote>
    또 감사드릴 분이... 저는 경쟁을 싫어합니다. 제가 어떻게 글렌 클로즈를
    이기겠어요? 저는 그녀의 영화를 수없이 많이 봤습니다. 5명 후보가 모두 각자 다른
    영화에서의 수상자입니다. 우리는 각자 다른 역을 연기했잖아요. 우리끼리 경쟁할
    순 없습니다. 오늘 제가 여기에 있는 것은 단지 조금 더 운이 좋았을 뿐이죠.
    여러분보다 조금 더 운이 좋았네요. 그리고 아마도 미국인들이 한국 배우를
    대접하는 방법일 수도 있죠. 아무튼 감사합니다.
    <br>
    - 윤여정, 오스카 수상소감 중에서
</blockquote>

결과 확인
글 안에서 짧게 인용할 때는 <q> 를 쓰면 됩니다.

html
<p>
    윤여정은 오스카에서 김기영 감독에 대한 애정을 표시하기도 했습니다.
    <q>
        저는 이 상을 저의 첫 번째 감독님, 김기영에게 바치고 싶습니다.
        아주 천재적인 분이셨고 제 데뷔작을 함께 했습니다.
    </q>
    수상 소감의 마지막을 그녀가 존경하는 한국의 천재 감독을 언급한 것이죠.
</p>

결과 확인
참고로 크롬 브라우저에서는 기본적으로 <q> 태그를 따옴표로 감싸는 디자인으로 보여줍니다.

위 첨자, 아래 첨자
약간 작은 크기의 글자를 위나 아래에 붙여서 쓰는 걸 위 첨자, 아래 첨자라고 합니다. 아래 예시에서는 원소의 개수를 나타내는 화학 기호에 아래 첨자를, 제곱 연산을 나타낸 수학 기호에는 위 첨자를 써 주었습니다.

html
<p>
    물의 화학식은 H<sub>2</sub>O이고, 3의 제곱(3<sup>2</sup>)은 9이다.
</p>

결과 확인

# 주제 전환(Thematic Break)
과거에는 가로 선(Horizontal Line)이라고 불러서 <hr> 라고 쓰지만, 최근 HTML에서는 글에서 주제를 전환할 때 쓰는 태그입니다. 브라우저에서는 기본적으로 가로 선을 그어서 보여줍니다. 아래 예시 코드에서는 본문 내용 부분과 참고 자료들을 정리한 각주 부분을 <hr> 태그를 써서 구분해 주었습니다.

html
<p>
    윤여정은 오스카에서 김기영 감독에 대한 애정을 표시하기도 했습니다.
    <q>
        저는 이 상을 저의 첫 번째 감독님, 김기영에게 바치고 싶습니다.
        아주 천재적인 분이셨고 제 데뷔작을 함께 했습니다.<sup>[1]</sup>
    </q>
    수상 소감의 마지막을 그녀가 존경하는 한국의 천재 감독을 언급한 것이죠.
</p>
<hr>
<p>
    [1] "윤여정, 오스카 최고의 수상소감"…미국 '들썩', KBS뉴스 2021.04.27.
</p>


미리 서식이 정해진 텍스트 <pre>
본문 태그인 <p> 처럼 글을 이어서 보여주는 게 아니라, HTML에 적혀있는 그대로 보여주는 태그입니다. 보통 코드 같은 걸 쓸 때 많이 사용합니다.

html
<p>body 태그의 배경색과 글자색을 바꾸는 CSS 코드입니다.</p>
<pre>
    body {
        background-color: #000000;
        color: #ffffff;
    }
</pre>


# 코드 <code>
글 안에서 짧은 코드를 작성할 때 씁니다.

html
<p><code>body</code> 태그의 배경색과 글자색을 바꾸는 CSS 코드입니다.</p>
<pre>
    body {
        background-color: #000000;
        color: #ffffff;
    }
</pre>


## 리스트 정리
# 순서 리스트(Ordered List)
항목들 사이에 순서가 있는 목록을 작성할 때 <ol>이라는 태그를 감싸고, 그 안에 항목은 <li> 태그를 씁니다.

<h2>상영작 순위</h2>
<ol>
  <li>라라랜드</li>
  <li>명량</li>
  <li>극한직업</li>
  <li>신과함께: 죄와 벌</li>
  <li>국제시장</li>
  <li>어벤져스: 엔드게임</li>
</ol>

# 순서 없는 리스트(Unordered List)
항목들 사이에 순서가 없는 목록을 작성할 때 <ul>이라는 태그를 감싸고, 그 안에 항목은 <li> 태그를 씁니다.

<h2>카테고리</h2>
<ul>
  <li>한국 영화</li>
  <li>외국 영화</li>
  <li>드라마</li>
  <li>예능</li>
  <li>영화</li>
  <li>프로야구</li>
</ul>

# 리스트 스타일링
순서 리스트에서는 type 속성으로 기호를 바꿀 수 있습니다.

<ol type="I">
  <li>라라랜드</li>
  <li>명량</li>
  <li>극한직업</li>
  <li>신과함께: 죄와 벌</li>
  <li>국제시장</li>
  <li>어벤져스: 엔드게임</li>
</ol>

type 값	실제 기호
a	a, b, c, d, e, …
i	i, ii, iii, iv, v, …
I	I, II, III, IV, V, …
1	1, 2, 3, 4, 5, …
list-style이라는 CSS 속성으로도 바꿀 수 있습니다.

ul {
  list-style: disc; /* 동그라미 */
}
기호를 없애고 싶을 때는 none을 사용합니다.

ul {
  list-style: none; 
}
리스트 항목을 한 줄로 쓰고 싶으면 display: inline-block을 활용할 수도 있습니다. 내가 원하는 디자인으로 보여주면서도 HTML에서는 목록이라는 의미를 분명하게 나타낼 수 있습니다.

ul > li {
  display: inline-block;
}


## 테이블 정리

# 테이블
정보를 표로 나타낼 때는 <table> 태그를 사용합니다. 테이블의 행은 <tr> (Table Row)태그로 감쌉니다. 각 데이터들은 <td> (Table Data) 태그로 넣습니다.

<table>
  <tr>
    <td></td>
    <td>Premium</td>
    <td>Standard</td>
    <td>Basic</td>
  </tr>
  <tr>
    <td></td>
    <td>₩15,900</td>
    <td>₩10,900</td>
    <td>₩8,900</td>
  </tr>
  <tr>
    <td>화질</td>
    <td>최대</td>
    <td>FHD</td>
    <td>HD</td>
  </tr>
  <tr>
    <td>다운로드</td>
    <td>무제한</td>
    <td>월 30회</td>
    <td>불가</td>
  </tr>
</table>

# 머리글
표에서 머리글은 <thead> 태그로 감싸면 됩니다. 행은 <tr> 태그로 감싸 주면 됩니다. 각 행 안에 있는 것들은 제목이기 때문에 <td>가 아니라 <th>라는 태그를 넣습니다. 본문에 해당하는 행들은 <tbody>라는 태그로 감쌉니다.

<thead>
  <tr>
    <th></th>
    <th>Premium</th>
    <th>Standard</th>
    <th>Basic</th>
  </tr>
  <tr>
    <th></th>
    <th>₩15,900</th>
    <th>₩10,900</th>
    <th>₩8,900</th>
  </tr>
</thead>
<tbody>
  <tr> ... </tr>
  ...
</tbody>

# 바닥글
표에서 바닥글은  <tfoot> 태그로 감싸면 됩니다. <thead>와 마찬가지로 행은 <tr>로 감쌉니다. 제목으로 쓰는 칸은 <th> 태그를 넣습니다.

<table>
  <thead>
    <tr>
      <th></th>
      <th>Premium</th>
      <th>Standard</th>
      <th>Basic</th>
    </tr>
  </thead>
  <tbody>
    ...
  </tbody>
  <tfoot>
    <tr>
      <th></th>
      <th>₩15,900</th>
      <th>₩10,900</th>
      <th>₩8,900</th>
    </tr>
  </tfoot>
</table>

# 테이블 스타일링
# 테두리 넣기
border 속성을 사용해서 테두리를 넣을 수 있습니다. 이때 표 전체에 테두리를 넣고 싶으면 <table> 태그에 적용하고, 각 셀에 적용하고 싶으면 <td> 태그에 적용하면 됩니다.

table {
  border: 1px solid red; /* 표 전체의 테두리를 빨간색으로 */
}

th {
  border: 1px solid green; /* 제목 셀의 테두리를 초록색으로 */
}

td {
  border: 1px solid blue; /* 각 셀의 테두리를 파란색으로 */
}
표 미리보기

# 테두리 겹치기
기본적으로 표의 테두리는 서로 간격이 있어서 표 전체, 각 셀마다 보이는데요. 이 간격을 없애고 테두리끼리 겹치고 싶다면 border-collapse 속성을 활용하면 됩니다.

table {
  border: 1px solid red;
  border-collapse: collapse;
}

th {
  border: 1px solid green;
}

td {
  border: 1px solid blue;
}
표 미리보기 2

# 테두리 간격
테두리 사이의 간격을 직접 조절하고 싶다면 border-spacing이라는 속성을 사용하면 됩니다.

table {
  border: 1px solid red;
  border-spacing: 10px;
}

th {
  border: 1px solid green;
}

td {
  border: 1px solid blue;
}


## 멀티미디어 정리
# 이미지 <img>
파일 주소는 src 속성으로 지정합니다. 크기는 width와 height 속성으로 단위 없이 지정합니다(물론 CSS로도 크기를 조절할 수 있습니다). 이미지에 대한 설명은 alt라는 속성을 사용합니다.

<img src="poster.jpg" width="750" height="530" alt="영화 명량 포스터">

# 비디오 <video>
파일 주소는 src 속성으로 지정합니다. 크기는 width와 height 속성으로 단위 없이 지정합니다(물론 CSS로도 크기를 조절할 수 있습니다). 그 외에 자동 재생을 하는 autoplay 속성, 음소거를 하는 muted, 조작하는 버튼들을 보여 주는 controls 속성이 있습니다.  특히 자동 재생은 불쾌감을 줄 수 있기 때문에 일부 브라우저에서는 반드시 muted와 함께 써야 동작한다는 점도 팁으로 알아 둡시다.

<video autoplay muted controls src="trailer.mp4" width="750" height="530">
</video>

# 오디오 <audio>
파일 주소는 src 속성으로 지정합니다. 자동 재생을 하는 autoplay 그리고 조작하는 버튼들을 보여 주는 controls 속성이 있습니다.

<audio autoplay controls src="intro.mp3">
</audio>

# iframe <iframe>
인라인 프레임이라는 뜻으로, 다른 HTML 문서를 문서 안에 집어넣을 때 사용합니다. src로 불러올 문서의 경로를 지정해주면 됩니다. 이미지, 비디오, 오디오랑 마찬가지로 크기를 width, height라는 속성으로 지정할 수 있습니다.

<iframe src="banner.html" width="750" height="135">
</iframe>


## 유용한 인풋 태그 속성
# 값이 비어있을 때 보여주는 값 placeholder
값이 비어있는 인풋에 설명이 적혀있는 것 보신 적 있나요? 예를 들자면 아래 구글 로그인 화면에 있는 "이메일 또는 휴대전화" 같은 건데요. 이런 걸 "플레이스홀더"라고 부릅니다.

이런 값을 추가하려면 placeholder라는 속성을 쓰면 됩니다.

<input name="username" placeholder="이메일 또는 휴대전화">
이때 placeholder 의 디자인을 바꾸려면 CSS 선택자로 ::placeholder 를 활용하면 됩니다.

input::placeholder {
  color: #dddddd;
}

# 반드시 입력해야 하는 값 required
폼에서 반드시 입력해야 하는 값이 있다면 required 속성을 써주면 됩니다. 만약 required인 인풋의 값이 비어있다면, 전송 버튼을 눌러도 전송되지 않습니다.

<input name="email" type="email" required>

# 자동 완성 autocomplete
구글 크롬의 자동 완성 예시

예전에 입력한 값들을 보여주는 인풋을 보신 적 있나요?  이건 autocomplete이라는 속성을 써서 그런 건데요. 이 속성을 지정해 두면 폼이 전송될 때마다 입력한 값을 웹 브라우저에 저장해 두고, 나중에 인풋에 값을 입력할 때 추천해 줍니다.

참고로 required와 달리 on이라는 값을 지정해 주어야 동작하니까 꼭 기억해 주세요.

<input name="search" type="text" autocomplete="on">
만약에 이메일을 채워 넣게 하고 싶다면 email이라는 값을 쓸 수 있고, 전화번호를 채워 넣고 싶다면 tel이라는 값을 쓸 수 있는데요. 이런 건 특히 스마트폰으로 사이트를 접속했을 때 유용하겠죠?

<input name="email" type="email" autocomplete="email">
<input name="telephone" autocomplete="tel">
이것 말고도 다양한 속성 값이 있는데요. 혹시 더 궁금하신 분들은 MDN 문서의 HTTP attribute: autocomplete를 참고해 보세요.
https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete


## 폼 정리
# 기본적인 폼의 형태
<form>
  <label for="username">아이디</label>
  <input id="username" name="username">
  <label for="password">비밀번호</label>
  <input id="password" name="password" type="password">
  <button>로그인</button>
</form>

# 라벨
<label> 태그로 <input>을 감싸면 라벨을 클릭했을 때 인풋에 포커싱이 됩니다.

<label>
  아이디
  <input name="...">
</label>
혹은 라벨의 for 속성과 인풋의 id 속성을 일치시키면 클릭했을 때 인풋에 포커싱이 됩니다.

<label for="username">아이디</label>
<input id="username" name="...">

# 인풋 <input>
name 속성은 폼을 전송했을 때 입력한 값에 매칭되는 이름입니다. 예를 들어서 아래 코드에서는 인풋에 입력한 값이 username이라는 이름에 매칭됩니다.

  <label for="...">아이디</label>
  <input id="..." name="username">
type 속성을 사용하면 다양한 인풋을 사용할 수 있습니다. 대표적으로 입력한 값을 가려주고 싶을 때는 type="password"를 사용합니다.

<label for="password">비밀번호</label>
<input id="password" name="password" type="password">



## 다양한 인풋

앞에서 똑같은 <input> 태그이지만 type 속성을 password로 하면 입력한 내용이 가려지는 비밀번호 인풋을 만들 수 있었습니다. type에 쓸 수 있는 값에는 password 말고도 다양한 것들이 있는데요. 이번 레슨에서는 인풋의 여러가지 타입들과 이와 비슷한 태그들을 몇 가지 살펴보도록 하겠습니다. 참고로 이 내용을 모두 외울 필요는 없고, 자주 사용하는 몇 가지만 잘 알아두시면 됩니다.

# 체크박스 checkbox
한 항목만 선택하는 경우
아래 예시에서는 "동의합니다"에 체크하는 경우 agreement의 값이 on이라는 문자열로 지정됩니다.

<label>
  <input name="agreement" type="checkbox">
  동의합니다
</label>

# 여러 항목 중에서 몇 항목을 선택하는 경우
<input> 태그에 value 속성으로 값을 지정해 주면, 선택된 항목의 지정된 값이 쓰입니다. 예를 들자면 아래 코드에서는 "액션"이랑 "코미디"를 선택했을 때 film의 값으로 action과 comedy라는 문자열이 지정됩니다. 폼을 전송했을 때 쿼리 문자열에서는 &film=action&film=comedy처럼 전송됩니다.

<label for="film">좋아하는 영화 장르</label>
<label>
  <input type="checkbox" name="film" value="action">
  액션
</label>
<label>
  <input type="checkbox" name="film" value="comedy">
  코미디
</label>
<label>
  <input type="checkbox" name="film" value="romance">
  로맨스
</label>

# 날짜 date
선택한 날짜로 값을 지정할 수 있습니다.

<input name="birthdate" type="date">

# 파일 file
정말 자주 쓰이는 타입이어서 이건 따로 기억해 둡시다. 파일을 선택할 수 있는 인풋인데요.

<input name="avatar" type="file">

# 파일 형식 지정하기
accept라는 속성을 써서 허용할 파일 확장자들을 정해 줄 수 있습니다.

<input name="avatar" type="file" accept=".png,.jpg">

# 파일 개수 지정하기
multiple이라는 참/거짓 속성을 사용하면 여러 개 또는 한 개만 선택하도록 정할 수 있습니다.

<input name="photos" type="file" multiple> <!-- 여러 개 선택 가능 -->
<input name="avatar" type="file"> <!-- 한 개만 선택 가능 -->

# 이메일 email
텍스트를 입력할 수 있는 건 똑같지만, 버튼을 눌러서 폼을 전송할 때 올바른 이메일 형식인지 자동으로 검사해 줍니다.

<input name="email" type="email">

# 숫자 number
숫자를 입력하고, 최소 최대 값이나 버튼을 눌렀을 때 증가, 감소할 양을 정할 수 있습니다.

<input type="number">

<!-- 100에서 1000사이 -->
<input type="number" min="100" max="1000">

<!-- 100에서 1000사이, 버튼을 눌렀을 때 100씩 증가, 감소 -->
<input type="number" min="100" max="1000" step="100">

# 비밀번호 password
값을 입력했을 때 입력한 내용이 가려집니다.

<input type="password">

# 라디오 radio
동그란 선택 버튼입니다. 체크박스와 다르게 여러 항목 중 하나의 항목만 선택할 수 있습니다. value 속성과 같이 사용하면, 같은 name을 가진 <input> 태그들 중에, 선택한 <input>의 value 값을 입력하도록 할 수 있습니다. 예를 들어서 아래 코드에서 "좋음"을 선택하면 feeling의 값으로 3이라는 값이 들어가게 됩니다.

<input id="very-bad" name="feeling" value="0" type="radio">
<label for="very-bad">아주 나쁨</label>
<input id="bad" name="feeling" value="1" type="radio">
<label for="bad">나쁨</label>
<input id="soso" name="feeling" value="2" type="radio">
<label for="soso">보통</label>
<input id="good" name="feeling" value="3" type="radio">
<label for="good">좋음</label>
<input id="very-good" name="feeling" value="4" type="radio">
<label for="very-good">아주 좋음</label>

# 범위 range
범위 안에서 선택할 수 있는 인풋입니다.

<label for="signup-feeling">현재 기분</label>
<input id="signup-feeling" name="feeling" min="1" max="10" type="range">

# 텍스트 text
인풋 타입의 기본 값입니다. 일반적인 텍스트를 입력할 때 사용합니다.

<input name="nickname" type="text">

# 옵션 선택 <select>
미리 정해져 있는 여러 값들 중에서 하나를 선택할 수 있는 태그입니다. <select> 태그 안에 <option> 태그를 value와 함께 사용하면 되는데요. 예를 들어서 아래 코드에서 드라마를 선택하면 genre의 값이 drama가 됩니다.

<label for="genre">장르</label>
<select id="genre" name="genre">
  <option value="korean">한국 영화</option>
  <option value="foreign">외국 영화</option>
  <option value="drama">드라마</option>
  <option value="documentary">다큐멘터리</option>
  <option value="vareity">예능</option>
</select>

# 긴 글 <textarea>
긴 글을 입력할 수 있는 인풋입니다. <input> 태그와 달리 반드시 종료 태그(</textarea>)를 써 주어야 합니다.

<textarea name="content"></textarea>


## 회원가입 폼

# 실습 설명
앞에서 살펴본 다양한 인풋 type을 활용해서 회원가입 폼을 만들어 봅시다. 바로바로 기억나도록 외우지 않아도 괜찮으니, 실습 결과와 내용을 참고하면서 다양한 type과 태그를 한번 사용해 보세요.

# 해설
# 비밀번호
위에서부터 차례대로 만들어 볼게요.  우선 아이디는 그대로 둬도 괜찮을 것 같고, 비밀번호랑 비밀번호 확인은 입력한 값을 가려 주기 위해서 type="password"를 추가해 줍시다.

<label for="password">비밀번호</label>
<input id="password" name="password" type="password">
<label for="password-repeat">비밀번호 확인</label>
<input id="password-repeat" name="password-repeat" type="password">
이메일
이메일은 type="email"로 하면 되겠죠?

<input id="email" name="email" type="email">

# 라디오
성별은 동그랗고 세 가지 선택지 중에서 단 하나만 선택할 수 있는 라디오 인풋입니다. 라디오 인풋은 type="radio"라고 하면 되는데요.
여기서 <label> 태그로 <input>을 감싼 코드가 있는데 이렇게 하면 for 속성과 <input>의 id를 지정해 주지 않아도 됩니다.
그리고 인풋이 세 개지만 name은 모두 sex로 같고, value만 다른 것도 유심히 봐주세요. 라디오 인풋은 하나의 값만을 선택합니다.

<label>성별</label>
<label>
  <input name="sex" value="male" type="radio">
  남성
</label>
<label>
  <input name="sex" value="female" type="radio">
  여성
</label>
<label>
  <input name="sex" value="none" type="radio">
  밝히고 싶지 않음
</label>

# 날짜
이번에는 생년월일로 가 볼게요. 생년월일은 날짜니까 type="date"를 추가해 주면 됩니다.

<label for="birthdate">생년월일</label>
<input id="birthdate" name="birthdate" type="date">

# 체크박스
관심사에는 네모난 체크 박스가 있습니다. 참고로 체크박스는 여러 개 선택이 가능한데요. 물론 이때도 name 값은 모두 똑같은 값이어야 합니다. type="checkbox"라고 추가해 주면 됩니다.

<label for="interest">관심사</label>
<label>
  <input name="interest" value="programming" type="checkbox">
  프로그래밍
</label>
<label>
  <input name="interest" value="sport" type="checkbox">
  스포츠
</label>
<label>
  <input name="interest" value="film" type="checkbox">
  영화
</label>
<label>
  <input name="interest" value="economy" type="checkbox">
  경제
</label>

# 옵션 선택
직업을 고르는 인풋은 화살표를 눌러서 여러 옵션 중에 하나를 고르는 건데요. 이런 경우에는 <select>라는 태그를 name 속성과 함께 사용하고, 각 항목에는 <option> 태그를 value 속성과 함께 쓰면 됩니다.

<label for="profession">직업</label>
<select id="profession" name="profession">
  <option value="student">학생</option>
  <option value="office_worker">회사원</option>
  <option value="self_employed">자영업</option>
  <option value="educator">교사</option>
  <option value="athlete">운동 선수</option>
  <option value="musicien">음악가</option>
  <option value="painter">화가</option>
</select>

# 숫자
프로그래밍 공부한 기간은 숫자를 입력하는 부분입니다. type="number"를 넣어 줄게요.

<label for="duration">프로그래밍 공부한 기간(년)</label>
<input id="duration" name="duration" min="0" type="number">

# 파일
프로필 사진에는 파일을 입력하도록 되어있으니까, type="file"을 사용하면 됩니다.

<label for="profile">프로필 사진</label>
<input id="profile" name="profile" type="file">

# 긴 글
긴 글 입력에는 textarea를 쓰면 됩니다.

<label for="introduce">소개</label>
<textarea id="introduce" name="introduce"></textarea>


# html
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>회원가입</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
      href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap"
      rel="stylesheet"
   >
    <link rel="stylesheet" href="style.css">
  </head>
  <body>
    <form>
      <h1 class="login-title">회원가입</h1>
      <label for="username">아이디</label>
      <input id="username" name="username">
      <label for="password">비밀번호</label>
      <input id="password" name="password" type="password">
      <label for="password-repeat">비밀번호 확인</label>
      <input id="password-repeat" name="password-repeat" type="password">
      <label for="email">이메일</label>
      <input id="email" name="email" type="email">
      <label>성별</label>
      <label>
        <input name="sex" value="male" type="radio">
        남성
      </label>
      <label>
        <input name="sex" value="female" type="radio">
        여성
      </label>
      <label>
        <input name="sex" value="none" type="radio">
        밝히고 싶지 않음
      </label>
      <label for="birthdate">생년월일</label>
      <input id="birthdate" name="birthdate" type="date">
      <label for="interest">관심사</label>
      <label>
        <input name="interest" value="programming" type="checkbox">
        프로그래밍
      </label>
      <label>
        <input name="interest" value="sport" type="checkbox">
        스포츠
      </label>
      <label>
        <input name="interest" value="film" type="checkbox">
        영화
      </label>
      <label>
        <input name="interest" value="economy" type="checkbox">
        경제
      </label>
      <label for="profession">직업</label>
      <select id="profession" name="profession">
      <option value="student">학생</option>
      <option value="">회사원</option>
      <option value="">자영업</option>
      <option value="">교사</option>
      <option value="">선수</option>
      <option value="">음악가</option>
      <option value="">화가</option>
      </select>
      <label for="duration">프로그래밍 공부한 기간(년)</label>
      <input name="duration" min="1" >
      <label for="profile">프로필 사진</label>
      <input id="profile" name="profile" type="file">
      <label for="introduce">소개</label>
      <textarea id="introduce" name="introduce"></textarea>
      <button>가입하기</button>
    </form>
  </body>
</html>




## link 태그
<link rel="stylesheet" href="style.css">  //css
<link rel="icon" href="favicon.ico">  //파비콘, 아이콘


## script 태그
<script src="script.js"></script>


## 좋아요 버튼
# html
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="utf-8">
  <title>좋아요 버튼</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <button class="like">♥</button>
  <script src="like.js"></script>
</body>
</html>

#like.js
const element = document.querySelector('button.like');
if (element) {
  element.addEventListener('click', handleClickLike);
}

function handleClickLike(e) {
  e.target.classList.toggle('liked');
}

# style.css
.like {
  background-color: #e7c8c8;
  border-radius: 16px;
  border: none;
  color: #3f3636;
  font-size: 24px;
  padding: 8px 16px;
  transition:
    color 0.2s ease,
    margin-top 0.1s ease;
}

.like:active {
  margin-top: 2px;
}

.liked {
  color: #e13b57;
}


## link, script 정리

<link> 태그
외부에 있는 것을 불러올 때 사용하는 태그입니다. 어떤 목적인지를 rel 속성에 적습니다. 위치는 href로 지정하면 됩니다. 주로 <head> 태그 안에서 맨 마지막에 써 줍니다.

CSS 파일을 불러올 때는 rel="stylesheet"라고 썼어요.

<head>
  ...
  <link rel="stylesheet" href="style.css">
</head>
사이트 아이콘을 불러올 때는 rel="icon"이라고 썼습니다.

<head>
  ...
  <link rel="icon" href="favicon.ico">
</head>
<script> 태그
자바스크립트 파일을 불러올 때 사용하는 태그입니다. 파일의 위치는 src로 적어 줍니다. 주로 <body> 태그 안에서 맨 마지막에 써 줍니다. 이때 종료 태그인 </script>를 쓰는 것도 꼭 기억해 주세요.

<body>
  ..
  <script src="like.js"></script>
</body>


## 사이트에 대한 정보 MetaData

<! DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>코드잇 캠핑장</title>
        <link rel="stylesheet" href="style.css">
        <link rel="favicon" href="favicon.ico">
        <meta property="og:title"
            content="코드잇 캠핑장">
    </head>
    <body>
        <h1>파도소리 들리는 감성 캠핑 !< /h1>
        <script src="script.js"></script>
    </body>
</html>


## 시맨틱 태그(Semantic Tag)
// 영역을 의미있게 나눌 때 사용한다.
// <div> 태그와 기능은 완전히 같다.
// 작성하는 사람의 의도가 중요하다.

로고 제목 header
메뉴 nav
메인 main
하단정보 footer

// main은 한번만 사용하지만, header와 footer는 여러 영역에서 사용할 수 있다.

article  // 하나의 독립된 완전한 글
section // 소재로 세션으로 구분 한다.
figure  // 이미지와 이미지 소개 글을 함께 묶어서 구분 한다.


## 시맨틱 태그를 사용하면 좋은 점
검색 최적화(search Engine Optimization) SEO
웹 접근성(Web Accessibility) A11y
장벽 없는(Barrier-Free) 인터넷을 만드는데 중요하다.

## 의미있는 HTML 정리
# <head> 태그
페이지에 대한 정보를 담고 있는 태그입니다. 주로 이 페이지에 대한 데이터를 담고 있는데, 화면에 보여 주기보다는 웹 브라우저가 읽어서 처리하는 용도입니다.

<head>
    <meta charset="utf-8">
    <title>코드잇 캠핑장</title>
    <link rel="stylesheet" href="style.css">
    <link rel="favicon" href="favicon.ico">
  </head>

# 시맨틱 태그
<div>와 기능은 똑같지만, 의미가 담겨있는 태그들을 '시맨틱 태그'라고 합니다. 엄격한 사용법이 있는 건 아니고, 작성하는 사람의 의도가 중요합니다. 시맨틱 태그를 잘 활용하면 검색 엔진 최적화(SEO)나 접근성(Accessibility)을 높이는데 도움이 됩니다.

태그 이름	용도
<header>	영역 위쪽에서 로고나 제목, 메뉴 같은 걸 담고 있는 도입부
<main>	사이트의 본격적인 내용으로 페이지에서 딱 한 번만 사용 가능
<footer>	영역 아래쪽에서 여러 가지 연락처나 관련 정보를 담고 있음
<article>	하나의 완성된, 독립적인 내용을 나타내는 영역
<section>	어떤 것의 일부분을 나타내는 영역
<figure>	이미지와, 이미지 설명을 담고 있는 영역



## 웹 퍼블리싱 시작하기
## 구독페이지: 사이트 이름
# 해설
페이지 이름은 <title> 이라는 태그를 사용하면 넣을 수 있는데요,
이런 식으로 시작 태그 <title> 와 종료 태그 </title>  사이에다가 “Weekly Codeit”을 넣어주면 페이지 이름이 됩니다.

<!DOCTYPE html>
<html>
  <title>Weekly Codeit</title>
  Hello Codeit!
</html>
그리고 <title> 같은 페이지에 대한 정보랑 페이지의 내용을 구분하기 위해서 <head> 와 <body> 라는 태그를 사용했는데요. 페이지에 대한 정보는 <head> 태그 안에 감싸고, 페이지 내용은 <body> 태그 안에 감싸면 됩니다.


<!DOCTYPE html>
<html>
  <head>
    <title>Weekly Codeit</title>
  </head>
  <body>
    Hello Codeit!
  </body>
</html>


## 한글이 깨질 때
인코딩 Encoding
<meta charset="utf-8">  // <head> 안에 작성

# 글의 단락을 나누기 위해서 <p></p> 태그를 사용한다.

# 꺾쇠 기호를 넣는 올바른 방법
꺾쇠를 글자로 입력하고 싶을 때는 꺾쇠를 그대로 쓰는 게 아니라, &lt;(앰퍼샌드 엘 티 세미콜론) &gt;(앰퍼샌드 지 티 세미콜론) 이렇게 입력해 줘야 합니다. 여기서 lt라는 건 영어로 “~보다 작다”라는 뜻인 less than의 약자고 gt라는 건 “~보다 크다”라는 뜻인 greater than의 약자입니다.

<p>
  HTML 파일을 작성하려면 DOCTYPE, &lt;html&gt;, &lt;head&gt;, &lt;body&gt; ... 적어야 할 것이 참
  많습니다. 이럴때 유용하게 쓸 수 있는 기능이 있는데요. VS Code에서는
  !(느낌표)를 입력하고 Tab 키나 Enter 키를 누르면 HTML 코드를 한번에 입력할
  수 있답니다!
</p>

# 위키 페이지 만들기
# 해설
제가 좋아하는 인물은 전기차 기업 테슬라를 만든 일론 머스크라는 사람인데요.
<title> 태그에  '일론 머스크'라고 쓰겠습니다.

<title>일론 머스크</title>
그러면 페이지 이름이 일론 머스크로 바뀌겠죠?
자 이제 제목을 써 볼게요.
줄 바꿈을 넣고 영문 이름도 넣어야 하니까 <h1> 태그 안에다가 <br> 태그를 넣겠습니다.

<h1>
  일론 머스크<br>
  (Elon Musk)
</h1>
이제 일론 머스크 사진을 찾아야겠네요.
구글에 '일론 머스크'를 검색해서, 저는 위키피디아에 있는 사진 주소를 가져왔습니다.

https://upload.wikimedia.org/wikipedia/commons/3/34/Elon_Musk_Royal_Society_%28crop2%29.jpg
이걸 <img>  태그를 사용해서 넣으면 이렇게 넣어 줄 수 있습니다.

<img src="https://upload.wikimedia.org/wikipedia/commons/3/34/Elon_Musk_Royal_Society_%28crop2%29.jpg">
자 이제 설명을 넣어 봅시다. 설명은 <p> 태그를 사용해서 단락으로 넣습니다.

<p>
  전기차 기업 Tesla의 테크노킹.
  민간 우주 기업 SpaceX, 인공지능 기업 OpenAI 등
  다양한 분야에서 활약중인 기업인이다.
</p>
이제 마지막으로 링크만 하나 넣으면 되겠네요.
저는 Tesla라는 글자에 링크를 넣을게요. 테슬라 홈페이지를 검색해 보니까 주소가 https://www.tesla.com인데요.
이렇게 넣어 주겠습니다.

<p>
  전기차 기업 <a href="https://www.tesla.com">Tesla</a>의 테크노킹.
  민간 우주 기업 SpaceX, 인공지능 기업 OpenAI 등
  다양한 분야에서 활약중인 기업인이다.
</p>
자 이제 위키 페이지를 완성했습니다.

<!DOCTYPE html>
<html>
  <head>
    <title>일론 머스크</title>
    <meta charset="utf-8">
  </head>
  <body>
    <h1>
      일론 머스크<br>
      (Elon Musk)
    </h1>
    <img src="https://upload.wikimedia.org/wikipedia/commons/3/34/Elon_Musk_Royal_Society_%28crop2%29.jpg">
    <p>
          전기차 기업 <a href="https://www.tesla.com">Tesla</a>의 테크노킹.
          민간 우주 기업 SpaceX, 인공지능 기업 OpenAI 등
          다양한 분야에서 활약중인 기업인이다.
        </p>
  </body>
</html>



## HTML 문법 정리
# 기본 문법
# 태그(Tag)
HTML에서 태그는 꺾쇠(< 기호랑 > 기호)를 사용하는 문법입니다.
일반적으로 시작 태그와 종료 태그로 내용을 감싸는데요, 시작 태그는 <태그 이름> 형태로 쓰고 종료 태그는 </태그 이름> 형태로 씁니다.

예시 1: <p> 태그
<p>
  단락은 이렇게 넣습니다.
</p>
예시 2: <img> 태그
<img src="https://example.com/my-image.png">
예시 3: <img> 태그를 슬래시와 함께 쓰는 경우
줄바꿈(<br>)이나 이미지(<img>)처럼 안에 내용이 없는 태그는 시작 태그만 씁니다.
참고로 마지막에 슬래시(/) 기호를 넣어서 하나짜리 태그라는 걸 표시하기도 하는데요. 
우리 수업에서는 슬래시 없이 태그를 사용했는데, 둘 다 올바른 HTML 문법이니까 참고로 알아 두세요!
(아래처럼 쓰는 것도 올바른 문법입니다.)

<img src="https://example.com/my-image.png" />
속성
시작 태그에 속성 이름="속성 값" 형태로 사용하는 문법입니다. 태그의 속성을 정합니다.

예시 1: <a> 태그의 href 속성
<a href="https://codeit.kr">코드잇</a>
예시 2: <img> 태그의 src 속성
<img src="https://example.com/my-image.png">

# HTML 파일의 기본 구조
맨 윗줄에는 이 파일이 HTML 문법을 쓴다는 걸 알려주는 코드가 들어갑니다.
<!DOCTYPE html> 인데요. 여기서 DOCTYPE 은 문서 타입(Document Type)이라는 뜻입니다.
그 아래로는 크게 <html> 태그로 감싼 다음에, <head> 태그와 <body> 태그로 나눕니다.
이때 <head> 태그 안에는 페이지에 대한 정보가 들어가고, <body>에는 페이지 내용이 들어갑니다.

<!DOCTYPE html>
<html>
  <head>
  </head>
  <body>
  </body>
</html>

# 배운 태그 정리
# 사이트 이름
웹 브라우저 탭이나 창에 보이는 제목을 정할 수 있습니다. 참고로 페이지 내용이 아니라, 페이지에 대한 정보이기 때문에 <head> 태그 안에 구분해서 넣습니다.

<head>
  <title>윤동주 서시 - 한국 시 모음</title>
  ...
</head>

# 인코딩 정하기
한글을 지원하는 인코딩인 UTF-8을 사용하도록 정하는 코드입니다.   
<meta> 태그를 사용해서 <head> 태그 안에 넣어 주면 됩니다.

<head>
  <meta charset="utf-8">
  ...
</head>

# 제목
제목(Heading)은 제일 큰 것부터 작은 것까지 <h1>, <h2>, ... <h6> 태그를 사용할 수 있습니다.
사이트 이름에 쓰는 <title> 태그와 헷갈리지 않도록 주의하세요!

<h1>서시</h1>
<h2>시인 윤동주</h2>

# 단락
단락(Paragraph)은  <p>태그로 감싸면 되는데요.
이때 코드에서 줄 바꿈은 화면에 나오지 않고 붙어서 보입니다.

<p>
  죽는 날까지 하늘을 우러러
  한 점 부끄럼이 없기를,
  잎새에 이는 바람에도
  나는 괴로워했다.
  별을 노래하는 마음으로
  모든 죽어가는 것을 사랑해야지
  그리고 나한테 주어진 길을
  걸어가야겠다.
</p>
<p>
  오늘 밤에도 별이 바람에 스치운다.
</p>

# 줄 바꿈
HTML은 기본적으로 문장들을 이어서 보여 줍니다. 줄 바꿈(Break Line)은 <br>이라는 태그를 사용합니다. 이때 줄 바꿈 태그 안에는 내용이 없으니까 시작 태그 하나만 <br>처럼 씁니다.

<p>
  죽는 날까지 하늘을 우러러<br>
  한 점 부끄럼이 없기를,<br>
  잎새에 이는 바람에도<br>
  나는 괴로워했다.<br>
  별을 노래하는 마음으로<br>
  모든 죽어가는 것을 사랑해야지<br>
  그리고 나한테 주어진 길을<br>
  걸어가야겠다.
</p>
<p>
  오늘 밤에도 별이 바람에 스치운다.
</p>

# 링크
링크는 <a> 태그를 사용합니다. href 속성으로 이동할 주소나 경로를 적어 주면 됩니다.

<a href="https://ko.wikipedia.org/wiki/%EC%84%9C%EC%8B%9C_(%EC%8B%9C)">
  위키 문서 보기
</a>

# 이미지
이미지(image)는 <img> 태그를 사용합니다. src 속성으로 이미지 파일의 주소나 경로를 적어 주면 됩니다.

예시 1: 인터넷에 올라와 있는 사진
<img src="https://upload.wikimedia.org/wikipedia/commons/4/4f/Yun_Dong-ju.jpg">
위에서 사용한 윤동주 이미지는 이미지는 Public domain 라이선스를 따릅니다.

예시 2: 같은 폴더에 있는 yun-dong-ju.jpg 파일 사용하기
<img src="yun-dong-ju.jpg">
예시 3: images 라는 폴더 안에 있는 파일 사용하기
<img src="images/yun-dong-ju.jpg">

# 영역 나누기
<div> 태그로 여러 태그를 감싸거나,  <span> 태그로 텍스트 일부만 감쌀 수 있습니다.
참고로 이렇게 영역을 나누는 건 나중에 CSS를 사용할 때 스타일을 적용하는 용도로 사용할 겁니다.

<div>
  <h1>서시</h1>
  <h2>시인 <span>윤동주</span></h2>
</div>
<div>
  <p>
    죽는 날까지 하늘을 우러러<br>
    한 점 부끄럼이 없기를,<br>
    잎새에 이는 바람에도<br>
    나는 괴로워했다.<br>
    별을 노래하는 마음으로<br>
    모든 죽어가는 것을 사랑해야지<br>
    그리고 나한테 주어진 길을<br>
    걸어가야겠다.
  </p>
  <p>
    오늘 밤에도 별이 바람에 스치운다.
  </p>
</div>


## HTML 코드를 편하게 입력하는 법

매번 HTML 파일을 만들고 <html> , <head>, <title>, <body> ... 이런 태그를 쓰는 건 번거로운데요.
이번 레슨에서는 필수적으로 사용하는 HTML 코드들을 편하게 입력하는 법을 소개해 드릴게요.
VS Code를 열고 빈 HTML 문서에서 느낌표(!) 를 입력하면 아래처럼 자동 완성 창이 뜨는데요.

VS Code에서 느낌표를 입력하자 Emmet 팝업이 뜬 상태

이 상태에서 엔터 혹은 탭(Tab) 키를 누르거나 마우스로 클릭하면 VS Code가 HTML 기본 코드를 완성해 줍니다! 
코드를 하나씩 적지 않아도 되니까 정말 편합니다.

Emmet 기능을 사용해서 HTML 코드를 자동완성한 모습

완성된 태그 중에 우리가 배우지 않은 내용도 있는데요,
간단히 소개하자면 이렇습니다:

인터넷 익스플로러에서 최신 표준 모드로 보여주는 코드

<meta http-equiv="X-UA-Compatible" content="IE=edge">
모바일 기기에서 보여줄 비율을 조정하는 코드

<meta name="viewport" content="width=device-width, initial-scale=1.0">
참고로 이 코드들은 일반적으로 자주 사용하는 코드니까 굳이 지우지 않고 그대로 활용해도 좋습니다.


## 구독 페이지: 배경색 넣기
# 해설
우선 CSS는 style 이라는 속성으로 넣을 수 있습니다.
만약 <div> 태그에 CSS를 넣고 싶다면, 아래처럼 style 속성을 추가하고 쓰면 됩니다.

<div style="">
  ...
</div>
여기다가 배경색을 넣으려면 CSS 속성이란 걸 추가하는데요, 속성명: 속성값과 같이 쓰면 됩니다.
배경색은 background-color라는 CSS 속성을 사용하면 됩니다.
예를들어서 #703fda라는 색상 코드로 배경색을 지정하면 아래처럼 쓸 수 있죠.

<div style="background-color: #703fda">
  ...
</div>
CSS는 모든 태그에 사용할 수 있기 때문에 <div> 태그 뿐만 아니라 <p> 태그 같은 데서도 쓸 수 있는데요.
흰색 배경인 #ffffff 으로 넣고 싶으면 아래처럼 하면 됩니다.

<p style="background-color: #ffffff">
  iloveprincess 님<br>
  안녕하세요, 5년차 코둥이입니다! 제가 구독 중인 뉴스레터 중 가장 읽기 편하고 재밌어요.
  매주 금요일이 기다려지네요 :) 
</p>
이런 식으로 각 <div>  태그와 <p> 태그에 배경색을 넣어 주면 됩니다.


## 글꼴
<!DOCTYPE html>
<html>
  <head>
    <title>Weekly Codeit</title>
    <meta charset="utf-8">
  </head>
  <body style="color: #737373">
    <div style="background-color: #7542e0">
      <h1 style="color: #ffffff">Weekly <span>Codeit<span></h1>
      <p style="color: #c1b7ff">금요일에 만나는 코딩 한 스푼.</p>
    </div>
    <div>
      <img src="thumbnail-unix.png">
      <h2 style="color: #2e2e2e">생산성을 높여줄 유닉스 커맨드 꿀팁</h2>
      <p>
        생각만하면 모든게 이루어진다! 꿈 같은 이야기죠? 하지만 유닉스 커맨드를
        사용하면 더 이상 꿈이 아니랍니다. 마우스 대신에 유닉스 명령어들을 사용하면
        복잡한 일도 한 번에 뚝딱하거든요.
      </p>
      <p>
        유닉스 커맨드를 사용할 때 알아두면 좋은, 작업 효율성을 UP! UP! 시켜주는
        꿀팁 몇 가지를 준비해봤으니까, 한 번 살펴보세요!
      </p>
      <a href="https://blog.codeit.kr/post/6052b25f701df852a9157516" style="color: #7844e8">
        자세히 보기
      </a>
    </div>
    <div style="background-color: #fbfbff">
      <img src="thumbnail-machine-learning.png">
      <h2 style="color: #2e2e2e">머신 러닝을 통한 추천 시스템 (내용 기반, 협업 필터링)</h2>
      <p>
        넷플릭스나 애플 뮤직은 어떻게 영화나 음악을 추천해주는 걸까요? 일단 추천
        시스템이란 유저에게 유저가 좋아하거나 구매할 만한 상품을 추천해 주는
        프로그램을 의미합니다.
      </p>
      <p>
        내가 평소에 쓰는 서비스들은 이미 추천 서비스를 사용하고 있을지도 모릅니다.
        (놀랍죠?) 유저 별로 아마존이나 쿠팡에서 물건들을, 넷플릭스에서
        영화들을, 애플 뮤직에서 노래를 보여주는 것. 모두 추천 시스템을 사용해서 첫
        화면에 보여주기 때문이죠.
      </p>
      <a href="https://blog.codeit.kr/post/6054359298b173400407da01" style="color: #7844e8">
        자세히 보기
      </a>
    </div>
    <div>
      <img src="thumbnail-emmet.png">
      <h2 style="color: #2e2e2e">Tips & Tricks: HTML 코드 편하게 입력하는 법</h2>
      <p>
        HTML 파일을 작성하려면 DOCTYPE, &lt;html&gt;, &lt;head&gt;, &lt;body&gt; ... 적어야 할 것이 참
        많습니다. 이럴때 유용하게 쓸 수 있는 기능이 있는데요. VS Code에서는
        !(느낌표)를 입력하고 Tab 키나 Enter 키를 누르면 HTML 코드를 한번에 입력할
        수 있답니다!
      </p>
      <p>
        이건 Emmet 이라고 부르는 문법의 일부인데요. Emmet은 개미라는
        뜻이랍니다. 개미는 자기 몸집의 50배나 넘는 물건을 옮길 수 있다는데요.
        개미처럼 Emmet의 문법도 짧은 단어만 입력하면 긴 HTML 코드를 뚝딱 만들어 낼
        수 있으니까, 한 번 살펴보시는 것도 좋을 거 같네요.
      </p>
    </div>
    <div style="background-color: #fbfbff">
      <h2 style="color: #2e2e2e">코둥이 퀴즈</h2>
      <p style="background-color: #f6f1ff; color: #7844e8">
        머신 러닝에서 유저에게 유저가 좋아하거나<br>
        구매할만할 상품을 추천해 주는 프로그램을<br>
        □□ □□□ (이)라고 부른다.
      </p>
      <p>
        빈 칸에 들어갈 다섯 글자를 답장으로 보내주세요.<br>
        선착순 200분께 코드잇 시그니쳐 굿즈를 보내드려요.
      </p>
    </div>
    <div style="background-color: #46415a; color: #ffffff">
      <p>Weekly <span>Codeit</span></p>
      <p>(주)코드잇 | 서울 중구 청계천로 100 시그니쳐타워 동관 10층</p>
      <p>Weekly Codeit 을 아직 구독하지 않으셨다면? 구독 신청하기</p>
      <p>뉴스레터가 보이지 않는다면, weekly@codeit.kr을 메일 주소록에 추가해주세요.</p>
      <p>수신 거부 Unsubscribe</p>
    </div>
  </body>
</html>

# google fonts : link rel="preconnect" 로 가져오기
# font-family: Poppins, 'Noto Sans KR'


## 폰트 크기와 굵기
# 해설
우선 "코드잇이 엄선한 / 프로그래밍 꿀팁"이 들어가 있는 h1 태그에 크기 24px, 굵기 300을 적용해 볼게요.

폰트 크기는 font-size 그리고 폰트 굵기는 font-weight를 사용하면 됩니다.

<h2 style="font-size: 24px; font-weight: 300">
  코드잇이 엄선한<br>
  <span>프로그래밍 꿀팁</span>
</h2>
글자 크기와 굵기를 적용한 예시

이제 "프로그래밍 꿀팁"을 감싼 <span> 태그에 크기 32px, 굵기 700을 적용해 볼게요.

<h2 style="font-size: 24px; font-weight: 300">
  코드잇이 엄선한<br>
  <span style="font-size: 32px; font-weight: 700">프로그래밍 꿀팁</span>
</h2>
글자 크기와 굵기를 적용한 예시 2

마찬가지로 "배움의 기쁨을 세상 모두에게 / 많은 코둥이들이 구독하고 있어요!"에도 똑같이 적용해 줍니다.

<h2 style="font-size: 24px; font-weight: 300">
  배움의 기쁨을 세상 모두에게.<br>
  <span style="font-size: 32px; font-weight: 700">
    많은 코둥이들이 구독하고 있어요!
  </span>
</h2>

# body, div, a, span 등 태그 안 style="" 에 작성한다.
# 글 정렬하기
# text-align: center
# text-align: left
# text-align: right


# 크기
<style="width: 560px">
<style="width: 560px; height: 375px">
<style="width: 100%">


# 여백
<style="padding: 40px 20px">


## Codechella Music Festival
# 해설
"수정할 부분"에 있는 내용을 참고해서 하나씩 차례대로 수정해 보겠습니다.

배경색이 안 맞음
배경색은 background-color라는 CSS 속성으로 적용할 수 있었습니다.
<body> 태그의 style 속성에 background-color: #fcf1fe를 추가해 줄게요.

<body style="font-family: Poppins, sans-serif; font-size: 16px; font-weight: 700; margin: 0; background-color: #fcf1fe">
  ...
</body>
본문 영역 <div>의 너비랑 여백이 안 맞음
너비는 width, 바깥 여백은 margin이라는 CSS 속성을 사용했습니다.
아래처럼 header.png 이미지 아래에 있는 <div> 태그에 width: 560px; margin: 24px auto를 추가해 줄게요.
이렇게 하면 너비는 560px이 되고 세로 바깥 여백은 24px, 가로 바깥 여백은 자동이 됩니다.

<body style="font-family: Poppins, sans-serif; font-size: 16px; font-weight: 700; margin: 0; background-color: #fcf1fe">
  <div style="padding: 56px">
    <div style="width: 640px; margin: 56px auto">
      <img src="header.png">
    </div>
    <div style="width: 560px; margin: 24px auto">
      ...
    </div>
</body>
지금까지 반영한 걸 확인해 보면, 배경색과 본문 너비, 바깥 여백이 들어갔습니다.

배경색, 본문 너비, 바깥 여백 지정한 예시

두 번째 본문(Saturday May 17 ... 부분) 정렬이 안 맞음
텍스트 정렬은 text-align 이라는 CSS 속성을 사용하면 되는데요.
오른쪽으로 정렬하려면 값을 right, 즉 text-align: right 이렇게 추가하면 됩니다.

<div style="margin: 24px 0; text-align: right">
  <h2 style="font-size: 20px; margin: 8px 0">SATURDAY MAY 17 & 24</h2>
  <p style="margin: 8px 0">
    ...
  </p>
</div>
정렬 추가한 예시

“Returning to the Desert / Swedish House Mafia” 부분에 글자 크기, 굵기 안 맞음
글자 크기는 font-size, 굵기는 font-weight를 사용했습니다.
각각 font-size: 16px; font-weight: 300이랑 font-size: 24px를 추가해 줄게요.

<div style="text-align: center; margin: 24px 0">
  <h2 style="margin: 8px 0; font-size: 16px; font-weight: 300">Returning to the Desert</h2>
  <p style="margin: 0; font-size: 24px">Swedish House Mafia</p>
</div>
글자 크기와 굵기 지정한 예시

푸터(맨 아랫부분)에 글자색이 안 맞음
이제 마지막으로 푸터 부분에 글자색을 넣어 줄게요.
글자색은 color라는 CSS 속성을 사용하면 됩니다.
푸터 영역을 감싸는 <div> 태그에 color: #ffffff를 추가해 줍시다.

<div style="background-color: #272928; padding: 32px; color: #ffffff">
  <div style="text-align: center; width: 560px; margin: 0 auto">
    <div style="margin: 24px 0">
      <h2 style="font-size: 16px; font-weight: 300; margin: 8px 0">Featuring</h2>
      <p style="font-size: 24px; margin: 8px 0">88rising's HEAD IN THE CLOUDS FOREVER</p>
    </div>
    <div style="margin: 24px 0">
      <h2 style="font-size: 16px; font-weight: 300; margin: 0">Large-scale art installations by</h2>
      <p style="font-size: 14px; margin: 0">
        Architensions • Cristopher Cichocki • Kiki Van Eijk • Los Dos •
        Estudio Normal • Oana Stanescu • NEWSUBSTANCE • Do LaB • Robert Bose
      </p>
    </div>
  </div>
</div>

'# 완성 예시
전체 코드입니다.

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Codechella Festival</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;700&display=swap" rel="stylesheet">
  </head>
  <body style="font-family: Poppins, sans-serif; font-size: 16px; font-weight: 700; margin: 0; background-color: #fcf1fe">
    <div style="padding: 56px">
      <div style="width: 640px; margin: 56px auto">
        <img src="header.png">
      </div>
      <div style="width: 560px; margin: 24px auto">
        <div style="margin: 24px 0">
          <h2 style="font-size: 20px; margin: 8px 0">FRIDAY MAY 16 & 23</h2>
          <p style="margin: 8px 0">
            <span style="font-size: 40px; margin: 8px 0">Harry Styles</span><br>
            <span>
              Lil Baby • Daniel Caesar • Phoebe • Bridgers • Big Sean • Grupo •
              Firme • Louis the Child • Baby Keem • Still Woozy. • King Gizzard •
              Snoh Aalegra • City Girls • Madeon • NIKI • Lane 8 • Pink Sweat$ •
              Omar Apollo • Black Coffee • IDLES • Peggy Gou • EPIK HIGH •
              the Marias • Carly Rae Jepsen • Spiritualized • Daphni • the Martinez Brothers •
              Bishop Briggs • MIKA • slowthai Cordae • BADBADNOTGOOD •
            </span>
            <span style="font-size: 12px">
              the Avalanches • Role Model • ARTBAT • Damian Lazarus • TOKiMONSTA •
              Princess Nokia • PUP • the Regrettes • Raveena • Purple Disco Machine •
              Arooj Aftab • Amyl and the Sniffers • Dom Dolla • Logic1000 • the Chats •
              the Hu • John Summit • Jean Dawson • Code Orange • Ela Minus • Jayda G •
              Lost Kings • Lawrence • GG Magree • Giselle Woo & the Night • Owls •
              SOHMI MEUTE • DJ Lord • Dear Humans
            </span>
          </p>
        </div>
        <div style="margin: 24px 0; text-align: right">
          <h2 style="font-size: 20px; margin: 8px 0">SATURDAY MAY 17 & 24</h2>
          <p style="margin: 8px 0">
            <span style="font-size: 40px; margin: 8px 0">Billie Eilish</span><br>
            <span>
              Flume • Megan Thee Stallion • Disclosure • 21 Savage • Danny Elfman •
              Stromae Giveon • Anitta • BROCKHAMPTON • Rich Brian • girl in red •
              Wallows • Isaiah Rashad • Caribou • Cuco • Conan Gray •
            </span>
            <span style="font-size: 12px">
              Koffee • Tchami • Dixon Caroline Polachek • Turnstile • 100 gecs •
              Freddie Gibbs & Madlib Pabllo Vittar • Hot Chip • DJ Koze •
              Floating Points • Steve Lacy • Arlo Parks •
              Rina Sawayama • Japanese Breakfast • Masego • Chelsea Cutler •
              Nicki Nicole • Richie Hawtin • Beach Bunny • Amber Mark • Ed Maverick •
              Current Joys • black midi • Chris Liebing • Kyary Pamyu Pamyu • 
              Inner Wave • ANNA • Holly Humberstone • Niliifer Yanya • L'Imperatrice •
              Emo Nite • Alaina Castillo • Paco Osuna • Beach Goons • VINSSA • Mannequin
              Pussy • Sama' Abdulhadi • Whipped Cream • DJ Holographic • Yard
              Act • ayla Benitez • Miane
            </span>
          </p>
        </div>
        <div style="margin: 24px 0">
          <h2 style="font-size: 20px; margin: 8px 0">SUNDAY MAY 18</h2>
          <p style="margin: 8px 0">
            <span style="font-size: 40px; margin: 8px 0">Ye</span><br>
            <span>
              X24 • Doja Cat • Joji • Jamie XX • Run the Jewels • Karol G •
              Maggie Rogers • FAri Lennox • Banda MS • Fatboy Slim • Maneskin •
              J.I.D • SLANDER • Solomun • Jessie Reyez • Denzel Curry • FINNEAS •
              Vince Staples •
            </span>
            <span style="font-size: 12px">
              Dave • Fred again.. • Duck Sauce • Chicano Batman • Duke Dumont •
              Kim Petras • Orville Peck • Natanael Cano • beabadoobee • Belly •
              the Bleised Madonna + Honey Dijon • Alec Benjamin • Ali Gatie •
              Surf Curse • Griselda • Michael Bibi • Nathy Peluso • Maxo Kream •
              Bedouin • Emotional Oranges • Channel Tres • Yola • Hayden James •
              Molchat Doma • Crumb • Olivia O'Brien • Eyedress • Sampa the Great •
              Satori • Viagra Boys • Adam Port • Altin Gun • Skegss • Luttrell •
              Mariah the Scientist • AMEME • Carino • Cole Knight
            </span>
          </p>
        </div>
        <div style="text-align: center; margin: 24px 0">
          <h2 style="margin: 8px 0; font-size: 16px; font-weight: 300">Returning to the Desert</h2>
          <p style="margin: 0; font-size: 24px">Swedish House Mafia</p>
        </div>
      </div>
    </div>
    <img src="palm_tree_background.png" style="display: block; width: 100%">
    <div style="background-color: #272928; padding: 32px; color: #ffffff">
      <div style="text-align: center; width: 560px; margin: 0 auto">
        <div style="margin: 24px 0">
          <h2 style="font-size: 16px; font-weight: 300; margin: 8px 0">Featuring</h2>
          <p style="font-size: 24px; margin: 8px 0">88rising's HEAD IN THE CLOUDS FOREVER</p>
        </div>
        <div style="margin: 24px 0">
          <h2 style="font-size: 16px; font-weight: 300; margin: 0">Large-scale art installations by</h2>
          <p style="font-size: 14px; margin: 0">
            Architensions • Cristopher Cichocki • Kiki Van Eijk • Los Dos •
            Estudio Normal • Oana Stanescu • NEWSUBSTANCE • Do LaB • Robert Bose
          </p>
        </div>
      </div>
    </div>
  </body>
</html>


## CSS 문법 정리
# CSS 기본 문법
# style 속성
태그에 CSS를 적용하려면 style 이라는 속성을 사용합니다.

<div style="...">
   ...
</div>
참고로 이번 수업에서는 일단 태그에 직접 적용하는 방법을 배웠는데요.
태그에 하나씩 추가하는 것 말고 좀 더 편하게 CSS를 사용하는 방법들도 있는데, 이건 CSS를 본격적으로 공부할 때 배워보겠습니다.

# CSS 속성과 CSS 속성 값
CSS 코드를 추가할 때는 CSS 속성: CSS 속성값 형태로 적습니다.

<div style="color: #272928">
   ...
</div>
여러 개의 CSS 속성 사용하기
여러 개의 CSS 속성을 사용할 때는 세미콜론(;)으로 구분합니다.

<div style="color: #272928; background-color: #eeeeee">
   ...
</div>

# CSS 기본 단위

# 색 이름
red, green, yellow처럼 색상을 이름으로 사용하는 방식입니다.
다양한 색을 표현하는데 한계가 있기 때문에 거의 사용하지 않습니다.
CSS 이름 목록: https://www.w3.org/wiki/CSS/Properties/color/keywords

# 색상 코드
색상을 HEX(16진수)로 표현한 값입니다. 보통 이 값으로 색상을 사용합니다.
모든 색깔들을 펼쳐 놓고 하나씩 코드를 부여한 건데요,
구글 검색에서 ‘Color Picker’ 같은 걸 검색해서 색상 코드를 확인해 볼 수 있었습니다.
주로 이미지 편집 프로그램 같은 데서 디자인을 하면서 색상 코드를 정하게 됩니다.

# 픽셀(px)
화면에서 그려지는 가장 작은 정사각형을 말합니다. 이 사각형을 크기의 단위로도 쓰는데요.
우리는 수업에서 픽셀 단위로 작업했습니다.
참고로 픽셀 말고도 다양한 크기의 단위가 있는데, 이건 나중에 더 자세히 배워 볼 거예요!

# CSS 속성
이번 수업에서 배운 CSS 속성 사용법을 예시로 간단하게 정리해 보겠습니다.

# 배경색
background-color: #272928

# 글자색
color: #ffffff

# 글꼴
우선 적용할 글꼴 이름부터 차례대로 적어 주면 됩니다.
글꼴 이름이 띄어쓰기가 있는 경우엔 따옴표로 감싸 줍니다.
sans-serif 나 serif 를 사용하면 산 세리프나 세리프 타입의 글꼴을 웹 브라우저가 알아서 적용해 줍니다.

font-family: Poppins, 'Noto Sans KR', sans-serif

# 글자 크기
font-size: 16px

# 글자 굵기
100에서부터 900까지, 100 단위로 올라갑니다.

중간이 되는 font-weight 값은 400 입니다.
font-weight: 400

# 너비
width: 560px

# 높이
height: 380px

# 안쪽 여백
세로, 가로 10px 예시
padding: 10px
세로 10px, 가로 20px 예시
padding: 10px 20px

# 바깥 여백
세로, 가로 10px 예시
margin: 10px
세로 10px, 가로 20px 예시
margin: 10px 20px
세로 10px, 가로 자동(알아서 채워 넣기) 예시
margin: 10px auto
참고: auto는 바깥 여백(margin)의 가로에서만 동작합니다



## 페이지끼리 연결하기
href="링크 주소"

##  오픈그래프로 소셜 공유 미리보기 만들기
<meta property="og:title" content="Mister Haru main">
<meta property="og:url" content="인터넷 주소">
<meta property="og:type" content="website">
<meta property="og:image" content="이미지 주소">
<meta property="og:description" content="소개 텍스트 내용">


### 구글 애널리틱스로 방문자 수 확인하기 google analytics  // 방문자 분석 & 통계

###  https://codepen.io/ 
html과 css, JS를 작성하고 바로 볼수 있으며, 다른 사람들의 코딩들을 볼수 있다.





